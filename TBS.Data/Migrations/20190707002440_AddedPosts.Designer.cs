// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TBS.Data.Database;

namespace TBS.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190707002440_AddedPosts")]
    partial class AddedPosts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TBS.Data.Models.General.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("PostalCode")
                        .IsRequired();

                    b.Property<string>("Province")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("TBS.Data.Models.Post.CarrierPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<string>("DropoffCity")
                        .IsRequired();

                    b.Property<DateTime>("DropoffDate");

                    b.Property<string>("PickupCity")
                        .IsRequired();

                    b.Property<DateTime>("PickupDate");

                    b.Property<int>("PostStatus");

                    b.Property<int>("SpacesAvailable");

                    b.Property<int>("TrailerType");

                    b.HasKey("Id");

                    b.ToTable("CarrierPosts");
                });

            modelBuilder.Entity("TBS.Data.Models.Post.ShipperPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("DropoffDate");

                    b.Property<int>("DropoffLocationId");

                    b.Property<DateTime>("PickupDate");

                    b.Property<int>("PickupLocationId");

                    b.Property<int>("PostStatus");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("DropoffLocationId");

                    b.HasIndex("PickupLocationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("ShipperPosts");
                });

            modelBuilder.Entity("TBS.Data.Models.User.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<string>("DriversLicense")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("UserFirebaseId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("TBS.Data.Models.User.Information.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<int>("ContactId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ContactId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("TBS.Data.Models.User.Information.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("TBS.Data.Models.User.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<string>("DealerNumber")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("RIN")
                        .IsRequired();

                    b.Property<string>("UserFirebaseId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("TBS.Data.Models.Vehicle.PostedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Make")
                        .IsRequired();

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<string>("VIN")
                        .IsRequired();

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("PostedVehicle");
                });

            modelBuilder.Entity("TBS.Data.Models.Post.ShipperPost", b =>
                {
                    b.HasOne("TBS.Data.Models.General.Address", "DropoffLocation")
                        .WithMany()
                        .HasForeignKey("DropoffLocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TBS.Data.Models.General.Address", "PickupLocation")
                        .WithMany()
                        .HasForeignKey("PickupLocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TBS.Data.Models.Vehicle.PostedVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TBS.Data.Models.User.Carrier", b =>
                {
                    b.HasOne("TBS.Data.Models.User.Information.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TBS.Data.Models.User.Information.Company", b =>
                {
                    b.HasOne("TBS.Data.Models.General.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TBS.Data.Models.User.Information.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TBS.Data.Models.User.Shipper", b =>
                {
                    b.HasOne("TBS.Data.Models.User.Information.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
